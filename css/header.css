* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* 盒子模型的设定 
    content-box
    border-box [整个盒子的大小是固定的，不会因为内外边距撑开盒子大小]
    */
}

body {
    background: rgb(241, 241, 241);
}


/* 头部开始 */


/*  */

.header {
    width: 375px;
    height: 74px;
    background-color: #f1f1f1;
    display: flex;
    flex-direction: column;
    /* 设置主轴方向 
    而且当盒子装不下去的时候，会按比例压缩！！并不会自动换行
    flex-direction:
    row 默认 从左到右
    row-reverse: 从右到左
    column 从上到下
    column-reverse:有下到上
    */
    position: fixed;
    left: 0;
    top: 0;
}

.headerTop {
    width: 375px;
    height: 44px;
    display: flex;
    align-items: center;
    /* 设置侧轴的内容分布 Y
    align-items:
    有以下属性：
    flex-start:向侧轴的开始位置靠拢
    center:向侧轴的中心位置靠拢
    flex-end:向侧轴的结束位置靠拢
    以上这三种方式，都会有间距，而且间距都相同
    以上这三种方式，都会有间距，而且间距都相同
    stretch:拉伸（默认） 如果设有高度，此拉伸无效
    */
    position: relative;
    /* 相对定位 */
    z-index: 100;
    background: #f2f2f2;
    border-bottom: 1px solid #fff;
}

.logo {
    width: 50px;
    height: 44px;
    background: url(../images/logo.png) no-repeat center;
    background-size: 25px auto;
}

.user {
    width: 50px;
    height: 44px;
    background: url(../images/user.png) no-repeat center;
    background-size: 25px auto;
}


/*  */


/*  */

.search {
    flex: 1;
    height: 33px;
    border: 1px solid #e5e5e5;
    display: flex;
    background-color: #fff;
    border-radius: 5px;
}

.search .icon {
    width: 31px;
    height: 31px;
    background: url(../images/search.png) no-repeat center;
    background-size: 20px 20px;
}

.search input {
    background: transparent;
    /* 背景透明 */
    border: none;
    /* 无边框 */
    outline: none;
    /* 透明 */
}


/*  */

.headerNav {
    display: flex;
    justify-content: space-around;
    /* 设置主轴的内容分布 X
    justify-content:
    属性有：
    flex-start: 向主轴的开始位置靠拢
    flex-end:向主轴的结束的位置靠拢
    center：向中间靠拢
    space-around:平均分布【两边有间距 间距是中间间距的一半】
    space-between:平均分布【两边没有间距 只有中间有间距】
    */
    align-items: center;
    /* 设置侧轴的内容分布 Y
    align-items:
    有以下属性：
    flex-start:向侧轴的开始位置靠拢
    center:向侧轴的中心位置靠拢
    flex-end:向侧轴的结束位置靠拢
    以上这三种方式，都会有间距，而且间距都相同
    以上这三种方式，都会有间距，而且间距都相同
    stretch:拉伸（默认） 如果设有高度，此拉伸无效
    */
    flex: 1;
    /* 这里平分了header这个大盒子的高度 之前上面的那个模块的高度是44 ，74-44=30 所以这个地方
    获得了30的高度
    */
}

.headerNav .xhicon {
    width: 20px;
    height: 20px;
    background: url(../images/download.png)no-repeat center;
    background-size: 20px 20px;
    position: relative;
    z-index: 15;
    /* 使用定位才能用层级关系 */
    transition: transform .8s;
}

.headerNav a {
    text-decoration: none;
    font-size: 14px;
    color: rgb(116, 116, 116);
    align-self: stretch;
    /* 拉伸，这样的话a标签自动适应盒子高度 所以此刻的a标签就是30 */
    display: flex;
    /* 使用弹性布局操作的时候，必须添加display:flex */
    align-items: center;
    /* 垂直 */
    justify-content: center;
    /* 水平 */
    /* 亦或者只用内边距，因为我们拉伸了a标签和盒子高度一样高，所以设置内边距就可以挤下去 */
    /* padding-top: 5px; */
}

.headerNav a:hover {
    color: #ff6700;
    border-bottom: 2px solid #ff6700;
}

.headerNav .recommend {
    border-bottom: 2px solid #ff6700;
    color: #ff6700;
}


/*  */


/* 第二部分下拉框开始 */

#choose:checked~.xlk {
    height: 100vh;
}

#choose:checked~.xlk .xlkMian {
    height: 130px;
}

#choose:checked~.xhicon {
    transform: rotate(180deg);
}

.xlk {
    width: 100vw;
    /* 视口宽度的1%=1vw */
    height: 0vh;
    /* 视口高度的1%=1vh */
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    position: fixed;
    /* 弹性定位 */
    top: 0;
    left: 0;
    /* 方位 */
    z-index: 10;
    /* 层级 数字越大越前*/
    overflow: hidden;
}

.xlkMian {
    width: 375px;
    height: 0px;
    background: #f2f2f2;
    display: flex;
    flex-direction: column;
    position: absolute;
    left: 0;
    top: 44px;
    transition: height 1s;
    overflow: hidden;
}

.xlkMian .xlkTop {
    width: 375px;
    height: 30px;
    padding-left: 11px;
    padding-top: 5px;
}

.xlkMian .xlkList {
    flex: 1;
    /* xlkList 的高度是100 */
    flex-wrap: wrap;
    /* 这是让垂直居中的盒子 换行 */
    display: flex;
    padding-left: 11px;
    align-content: space-evenly;
}

.xlkMian .xlkList a {
    width: 80px;
    height: 30px;
    line-height: 30px;
    text-align: center;
    background-color: #fff;
    border: 1px solid #e5e5e5;
    border-radius: 3px;
    margin: 0 10px 0 0;
    font-size: 14px;
    color: #3c3c3c;
}

.xlkMian .xlkList a:active {
    background-color: #fde0d5;
    border-color: #ff6700;
    color: #ff6700;
}

.xlkMian .xlkList a:nth-child(1) {
    background-color: #fde0d5;
    border-color: #ff6700;
    color: #ff6700;
    border-radius: 3px;
}


/* 第二部分下拉框END */


/* 头部END */